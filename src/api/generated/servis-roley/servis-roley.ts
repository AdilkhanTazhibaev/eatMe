// @ts-nocheck
/**
 * Generated by orval v7.13.0 üç∫
 * Do not edit manually.
 * Eat me
 * Eat me swagger documentation
 * OpenAPI spec version: 1.0.0
 */
import type {
  QueryFunction,
  QueryKey,
  UseQueryOptions,
  UseQueryReturnType,
} from '@tanstack/vue-query'
import { useQuery } from '@tanstack/vue-query'

import { unref } from 'vue'

import type { ApiError, RoleListResponseDto } from '.././model'

import { customAxios } from '../../custom-axios'

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–æ–ª–µ–π
 */
export const getRoles = (signal?: AbortSignal) => {
  return customAxios<RoleListResponseDto>({ url: `/api/v1/users/roles`, method: 'GET', signal })
}

export const getGetRolesQueryKey = () => {
  return ['api', 'v1', 'users', 'roles'] as const
}

export const getGetRolesQueryOptions = <
  TData = Awaited<ReturnType<typeof getRoles>>,
  TError = ApiError | ApiError,
>(options?: {
  query?: UseQueryOptions<Awaited<ReturnType<typeof getRoles>>, TError, TData>
}) => {
  const { query: queryOptions } = options ?? {}

  const queryKey = getGetRolesQueryKey()

  const queryFn: QueryFunction<Awaited<ReturnType<typeof getRoles>>> = ({ signal }) =>
    getRoles(signal)

  return { queryKey, queryFn, ...queryOptions } as UseQueryOptions<
    Awaited<ReturnType<typeof getRoles>>,
    TError,
    TData
  >
}

export type GetRolesQueryResult = NonNullable<Awaited<ReturnType<typeof getRoles>>>
export type GetRolesQueryError = ApiError | ApiError

/**
 * @summary –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–æ–ª–µ–π
 */

export function useGetRoles<
  TData = Awaited<ReturnType<typeof getRoles>>,
  TError = ApiError | ApiError,
>(options?: {
  query?: UseQueryOptions<Awaited<ReturnType<typeof getRoles>>, TError, TData>
}): UseQueryReturnType<TData, TError> & { queryKey: QueryKey } {
  const queryOptions = getGetRolesQueryOptions(options)

  const query = useQuery(queryOptions) as UseQueryReturnType<TData, TError> & { queryKey: QueryKey }

  query.queryKey = unref(queryOptions).queryKey as QueryKey

  return query
}
